swagger: "2.0"
info:
  title: Silmedy-환자 앱
  version: 1.0.0
  description: |
    Silmedy 환자용 앱의 백엔드 REST API 명세서입니다.
    회원 관리, 인증, 진료 예약, AI 진단, 배송 요청 등 주요 기능을 포함합니다.
    각 API는 JWT 보안 인증을 기반으로 동작하며, 클라이언트 앱에서 호출됩니다.

    🔐 인증이 필요한 API는 상단의 **Authorize** 버튼을 눌러 JWT 토큰을 입력한 후 사용하세요.
    - 예시: `Bearer eyJhbGciOi...`
    - "Bearer"와 토큰 사이에 **공백** 포함
host: 43.201.73.161:5000
basePath: /
schemes:
  - http
tags:
  - name: 회원 정보
    description: 회원가입, 로그인, 로그아웃, 마이페이지 조회 및 사용자 정보 수정 등 환자의 기본 계정 정보 관리를 위한 API입니다.
  - name: 사용자 인증
    description: 전화번호 기반 본인 인증 및 인증번호 확인을 위한 API입니다.
  - name: 토큰 발급 및 갱신
    description: JWT 기반 인증 토큰의 발급 및 리프레시를 담당하는 API입니다.
  - name: 외부 API
    description: 우편번호 검색 등 외부 서비스와 연동된 기능을 제공하는 API입니다.
  - name: 채팅 기반 진단
    description: 환자 입력에 따른 AI 챗 기록 저장 및 요약, 진단 흐름 제어를 위한 API입니다.
  - name: 질병 정보
    description: 증상 기반으로 연관된 질병 정보를 제공하는 AI 분석 API입니다.
  - name: 진료 예약
    description: 의사의 진료 가능 시간 조회 및 진료 예약 확정을 위한 API입니다.
  - name: 진료 내역 확인
    description: 진료 기록 및 처방전 내역을 확인할 수 있는 API입니다.
  - name: 약품 조제 및 배송
    description: 약국과 연동한 약 조제 및 배송 요청, 상태 변경을 위한 API입니다.

securityDefinitions:
  JWT:
    type: apiKey
    name: Authorization
    in: header

paths:
  /patient/signup:
    post:
      summary: 회원가입 요청을 처리하고 사용자 계정을 생성합니다.
      tags: [회원 정보]
      description: |
        새로운 환자 계정을 생성합니다. 이메일 중복 여부를 사전 확인하며,
        회원가입 후 환자 ID가 자동 부여됩니다.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
              name:
                type: string
              contact:
                type: string
              postal_code:
                type: string
              address:
                type: string
              address_detail:
                type: string
              birth_date:
                type: string
              sign_language_needed:
                type: boolean
              is_default_address:
                type: boolean
      responses:
        '200':
          description: 환자 등록 성공
        '409':
          description: 이메일 중복
        '500':
          description: 서버 오류

  /patient/check-email:
    post:
      summary: 이메일 중복 여부를 확인합니다.
      description: 입력한 이메일이 이미 사용 중인지 확인하는 API입니다.
      tags: [회원 정보]
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                description: 중복 확인할 이메일
      responses:
        '200':
          description: 사용 가능한 이메일
        '409':
          description: 이미 사용 중인 이메일
        '400':
          description: 이메일 형식 오류 또는 누락

  /patient/login:
    post:
      summary: 이메일과 비밀번호를 통해 로그인합니다.
      description: 환자가 이메일과 비밀번호로 로그인하는 API입니다. 로그인 성공 시 토큰이 발급됩니다.
      tags: [회원 정보]
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        '200':
          description: 로그인 성공
        '400':
          description: 필수 입력 누락
        '401':
          description: 로그인 실패
        '500':
          description: 서버 오류

  /patient/logout:
    post:
      summary: 현재 로그인된 사용자를 로그아웃합니다.
      description: 환자의 로그아웃 처리를 수행합니다. 토큰 삭제 또는 클라이언트 세션 종료에 사용됩니다.
      tags: [회원 정보]
      responses:
        '200':
          description: 로그아웃 성공

  /patient/name:
    get:
      summary: 인증된 사용자의 이름 정보를 반환합니다.
      description: 환자의 이름 정보를 조회하는 API입니다. JWT 인증이 필요합니다.
      tags: [회원 정보]
      security:
      - JWT: []
      responses:
        '200':
          description: 이름 반환 성공
        '401':
          description: 인증 실패
        '404':
          description: 사용자 없음
        '500':
          description: 서버 오류

  /patient/default-address:
    get:
      summary: 기본 배송 주소를 조회합니다.
      description: 환자의 기본 배송 주소 정보를 반환합니다. JWT 인증이 필요합니다.
      tags: [회원 정보]
      security:
        - JWT: []
      responses:
        '200':
          description: Default address info
        '404':
          description: User not found
        '500':
          description: Server error

  /patient/mypage:
    get:
      summary: 사용자의 마이페이지 정보를 조회합니다.
      description: 환자의 마이페이지(개인 정보 및 계정 상태 등)를 조회하는 API입니다.
      tags: [회원 정보]
      responses:
        '200':
          description: 마이페이지 데이터 반환
        '400':
          description: 환자 ID 누락
        '404':
          description: 사용자 없음

  /patient/update:
    post:
      summary: 회원 정보를 수정합니다.
      description: 환자의 계정 정보를 수정하는 API입니다. 변경할 필드와 값을 전달합니다.
      tags: [회원 정보]
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              updates:
                type: object
                description: 수정할 필드 딕셔너리
      responses:
        '200':
          description: 정보 수정 성공
        '400':
          description: 업데이트 항목 누락
        '404':
          description: 사용자 없음
        '500':
          description: 서버 오류

  /patient/repassword:
    post:
      summary: 사용자의 비밀번호를 변경합니다.
      description: 환자의 비밀번호를 변경하는 API입니다. 이메일과 새로운 비밀번호를 입력받습니다.
      tags: [회원 정보]
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              new_password:
                type: string
      responses:
        '200':
          description: 비밀번호 변경 성공
        '400':
          description: 입력 누락
        '404':
          description: 사용자 없음
        '500':
          description: 서버 오류

  /patient/delete:
    delete:
      summary: 사용자 계정을 삭제합니다.
      description: 환자 계정을 영구적으로 삭제하는 API입니다.
      tags: [회원 정보]
      responses:
        '200':
          description: 회원 탈퇴 완료
        '400':
          description: 환자 ID 누락
        '404':
          description: 사용자 없음


  /patient/fcm-token:
    post:
      summary: FCM 토큰을 등록하여 푸시 알림을 수신합니다.
      description: 푸시 알림 수신을 위한 FCM 토큰을 등록하는 API입니다.
      tags: [토큰 발급 및 갱신]
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              fcm_token:
                type: string
                description: FCM token to register
      responses:
        '200':
          description: FCM 토큰 저장 성공
        '400':
          description: FCM 토큰 누락
        '404':
          description: 사용자 없음
        '500':
          description: 서버 오류

  /token/refresh:
    post:
      summary: 리프레시 토큰으로 액세스 토큰을 갱신합니다.
      description: 만료된 액세스 토큰을 리프레시 토큰으로 갱신하는 API입니다.
      tags: [토큰 발급 및 갱신]
      security:
        - JWT: []
      responses:
        '200':
          description: 액세스 토큰 반환
        '401':
          description: 리프레시 토큰 누락 또는 만료


  /request-verification-code:
    post:
      summary: 전화번호로 인증번호를 전송합니다.
      description: 사용자의 전화번호로 인증번호를 발송하는 API입니다.
      tags: [사용자 인증]
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              phone_number:
                type: string
                description: 전화번호
      responses:
        '200':
          description: 인증번호 발송됨
        '400':
          description: 전화번호 누락 또는 형식 오류

  /verify-code:
    post:
      summary: 입력한 인증번호의 유효성을 검사합니다.
      description: 사용자가 입력한 인증번호가 유효한지 확인하는 API입니다.
      tags: [사용자 인증]
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              phone_number:
                type: string
              code:
                type: string
      responses:
        '200':
          description: 인증 성공
        '400':
          description: 인증 실패 또는 필수 입력 누락

  /verify-code-get-email:
    post:
      summary: 인증번호로 연결된 이메일을 조회합니다.
      description: 인증번호 확인 후 해당 전화번호에 연동된 이메일을 반환하는 API입니다.
      tags: [사용자 인증]
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              phone_number:
                type: string
              code:
                type: string
      responses:
        '200':
          description: 이메일 반환 성공
        '400':
          description: 인증번호 불일치
        '404':
          description: 사용자 없음
        '500':
          description: 서버 오류

  /verify-code-check-user:
    post:
      summary: 입력한 정보로 사용자를 확인합니다.
      description: 인증번호 확인 후 이메일과 전화번호가 일치하는 사용자가 존재하는지 검증하는 API입니다.
      tags: [사용자 인증]
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              phone_number:
                type: string
              code:
                type: string
      responses:
        '200':
          description: 사용자 확인 완료
        '400':
          description: 인증번호 불일치
        '404':
          description: 사용자 없음
        '500':
          description: 서버 오류


  /postal-code:
    get:
      summary: 키워드로 우편번호를 검색합니다.
      description: 입력한 키워드로 카카오 API를 통해 우편번호 리스트를 조회하는 API입니다.
      tags: [외부 API]
      parameters:
        - in: query
          name: keyword
          required: true
          type: string
          description: 검색 키워드
      responses:
        '200':
          description: 우편번호 리스트 반환
        '400':
          description: 키워드 누락
        '500':
          description: 서버 오류


  /chat/save:
    post:
      summary: AI 챗 응답을 저장하고 결과를 반환합니다.
      description: 환자의 입력 메시지를 저장하고, AI 챗봇의 응답을 생성하여 반환하는 API입니다.
      tags: [채팅 기반 진단]
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              patient_text:
                type: string
                description: 환자 입력 메시지
      responses:
        '200':
          description: 챗 저장 및 AI 응답 반환
        '400':
          description: 필수 항목 누락
        '500':
          description: 서버 오류

  /chat/move-to-body:
    post:
      summary: 채팅 후 외과 진단 단계로 이동합니다.
      description: 채팅 구분선을 추가한 뒤, 외과(사진 기반) 진단 단계로 이동하는 API입니다.
      tags: [채팅 기반 진단]
      security:
        - JWT: []
      responses:
        '200':
          description: Moved to photo-based diagnosis
        '500':
          description: Server error

  /chat/add-separator:
    post:
      summary: 챗 기록에 구분선을 추가하고 요약합니다.
      description: 챗 기록에 구분선을 추가하고, 해당 구간의 요약 정보를 저장하는 API입니다.
      tags: [채팅 기반 진단]
      security:
        - JWT: []
      responses:
        '200':
          description: Chat separator and summary info saved
        '400':
          description: Not enough chat history
        '500':
          description: Server error


  /info-by-symptom:
    post:
      summary: 증상에 따른 질병 정보를 조회합니다.
      description: 입력한 증상명을 기반으로 연관된 질병 정보를 AI가 분석하여 제공합니다.
      tags: [질병 정보]
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              symptom:
                type: string
                description: 검색할 증상명
      responses:
        '200':
          description: 질병 정보 조회 성공
        '400':
          description: 증상 누락
        '404':
          description: 매칭된 질병 없음
        '500':
          description: 서버 오류


  /health-centers-with-doctors:
    get:
      summary: 근처 보건소와 의사 정보를 조회합니다.
      description: 위치(위도, 경도)와 진료과, 의사 성별을 기준으로 가까운 보건소 및 소속 의사 정보를 조회합니다.
      tags: [진료 예약]
      parameters:
        - name: lat
          in: query
          required: true
          type: string
          description: 위도
        - name: lng
          in: query
          required: true
          type: string
          description: 경도
        - name: department
          in: query
          required: true
          type: string
          description: 진료과
        - name: gender
          in: query
          required: false
          type: string
          description: 의사 성별 (선택)
      responses:
        '200':
          description: List of doctors at health centers
        '400':
          description: Missing or invalid parameters
        '404':
          description: No health centers found
        '500':
          description: Server error

  /request/availability-signcheck:
    get:
      summary: 의사 진료 가능 시간과 수어 여부를 확인합니다.
      description: 특정 의사의 진료 가능 시간과 수어(수화) 필요 여부를 조회하는 API입니다.
      tags: [진료 예약]
      security:
        - JWT: []
      parameters:
        - in: query
          name: license_number
          required: true
          type: string
          description: Doctor's license number
      responses:
        '200':
          description: Reservations and sign language need info
        '400':
          description: License number required
        '404':
          description: Doctor or user not found
        '500':
          description: Server error

  /request/confirmed:
    post:
      summary: 진료 예약을 확정합니다.
      description: 진료 예약 정보를 입력하여 예약을 확정하는 API입니다. 예약 관련 필수 정보를 모두 입력해야 합니다.
      tags: [진료 예약]
      security:
        - JWT: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - doctor_id
              - department
              - symptom_part
              - symptom_type
              - book_date
              - book_hour
              - sign_language_needed
            properties:
              doctor_id:
                type: integer
                description: Doctor ID
              department:
                type: string
                description: Department
              symptom_part:
                type: array
                items:
                  type: string
                description: Symptom part(s)
              symptom_type:
                type: array
                items:
                  type: string
                description: Symptom type(s)
              book_date:
                type: string
                description: Booking date (YYYY-MM-DD)
              book_hour:
                type: string
                description: Booking hour (e.g., "14:00")
              sign_language_needed:
                type: boolean
                description: Whether sign language is needed
      responses:
        '200':
          description: Reservation confirmed
        '400':
          description: Missing required reservation information
        '500':
          description: Server error


  /diagnosis/list:
    get:
      summary: 진료 기록 목록을 반환합니다.
      description: 환자의 전체 진료 기록 목록을 반환하는 API입니다.
      tags: [진료 내역 확인]
      security:
        - JWT: []
      responses:
        '200':
          description: List of diagnosis records
        '500':
          description: Server error

  /prescription/url:
    get:
      summary: 처방전 PDF의 URL을 반환합니다.
      description: 진료 내역 ID로 처방전 PDF의 URL을 반환하는 API입니다.
      tags: [진료 내역 확인]
      security:
        - JWT: []
      parameters:
        - in: query
          name: diagnosis_id
          required: true
          type: string
          description: Diagnosis ID
      responses:
        '200':
          description: Prescription URL found
        '400':
          description: Diagnosis ID required
        '404':
          description: Prescription not found
        '500':
          description: Server error


  /pharmacies/nearby-info:
    get:
      summary: 위치 기반 약국 상세 정보를 조회합니다.
      description: 위도, 경도를 기준으로 근처 약국 정보를 카카오 API로 조회하고, 자체 DB와 일치하는 약국의 상세 정보를 반환합니다.
      tags: [약품 조제 및 배송]
      security:
        - JWT: []
      parameters:
        - name: lat
          in: query
          required: true
          type: string
          description: 위도 (Latitude)
        - name: lng
          in: query
          required: true
          type: string
          description: 경도 (Longitude)
      responses:
        '200':
          description: 근처 약국 정보 리스트 반환
          schema:
            type: array
            items:
              type: object
              properties:
                pharmacy_id:
                  type: integer
                  description: 약국 ID
                pharmacy_name:
                  type: string
                  description: 약국 이름
                open_hour:
                  type: string
                  description: 운영 시작 시간
                close_hour:
                  type: string
                  description: 운영 종료 시간
                address:
                  type: string
                  description: 약국 주소
                contact:
                  type: string
                  description: 약국 전화번호
        '400':
          description: lat 또는 lng 파라미터 누락 혹은 형식 오류
        '401':
          description: 인증 실패 (JWT 필요)
        '500':
          description: 서버 오류 또는 Kakao API 오류

  /delivery/register:
    post:
      summary: 배송 요청을 등록합니다.
      description: 약 조제 후 배송 요청을 등록하는 API입니다. 처방전 ID와 배송 정보가 필요합니다.
      tags: [약품 조제 및 배송]
      security:
        - JWT: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - is_delivery
              - prescription_id
            properties:
              is_delivery:
                type: boolean
                description: Whether delivery is requested
              prescription_id:
                type: string
                description: Prescription ID
              address:
                type: string
                description: Delivery address
              postal_code:
                type: string
                description: Postal code
              patient_contact:
                type: string
                description: Patient contact
              pharmacy_id:
                type: string
                description: Pharmacy ID
              delivery_request:
                type: string
                description: Special delivery request
              is_default_address:
                type: boolean
                description: Set as default address
      responses:
        '200':
          description: Delivery registered
        '400':
          description: Required fields missing
        '500':
          description: Server error